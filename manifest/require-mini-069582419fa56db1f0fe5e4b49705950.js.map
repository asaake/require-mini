)]}
{"version":3,"file":null,"sources":["app/assets/javascripts/require.coffee","app/assets/javascripts/mocker.coffee","app/assets/javascripts/require-mini.coffee"],"names":[],"mappings":"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","sourcesContent":["class @Require\n\n  constructor: () ->\n    @defines = {}\n    @loaded = {}\n    @dependences = {}\n\n  define: () ->\n    name = arguments[0]\n    if @defines[name]?\n      throw new Error(\"define #{name} is duplicate. override define is $define function.\")\n    @$define.apply(@, arguments)\n\n  $define: () ->\n    if arguments.length < 2 || arguments.length > 3\n      throw new Error(\"args is [name, func] or [name, deps, func]\")\n\n    switch arguments.length\n      when 2\n        name = arguments[0]\n        func = arguments[1]\n        deps = []\n      when 3\n        name = arguments[0]\n        deps = arguments[1]\n        func = arguments[2]\n\n    @undefine(name) if @defines[name]?\n    @defines[name] = {\n      name: name\n      deps: deps\n      func: func\n    }\n\n    for dep in deps\n      @dependences[dep] ?= {}\n      @dependences[dep][name] = true\n\n  undefine: (name) ->\n    @unload(name)\n    define = @defines[name]\n    delete @defines[name]\n    for dep in define.deps\n      delete @dependences[dep][name]\n\n  unload: (name) ->\n    delete @loaded[name]\n    deps = @dependences[name]\n    if deps?\n      for dep of deps\n        delete @loaded[dep]\n\n  run: () ->\n    if arguments.length < 1 || arguments.length > 2\n      throw new Error(\"args is [func] or [deps, func]\")\n\n    switch arguments.length\n      when 1\n        func = arguments[0]\n        deps = []\n      when 2\n        deps = arguments[0]\n        func = arguments[1]\n\n    parent = {\n      name: \"require-run\"\n      deps: deps\n      func: func\n    }\n    args = []\n    for dep in deps\n      args.push(@load(dep, parent))\n\n    func.apply(null, args)\n\n  load: (name, parent=null) ->\n\n    return @ if name == \"require\"\n    return @loaded[name] if (@loaded[name])\n\n    define = @defines[name]\n    if not(define?)\n      msg = \"#{name} is not defined.\"\n      if (parent?)\n        msg += \"\\n  deps to [#{parent.deps.toString()}]\"\n        msg += \"\\n  source to #{parent.func.toString()}\"\n      throw new Error(msg)\n\n    args = []\n    for dep in define.deps\n      args.push(@load(dep, define))\n\n    @loaded[name] = define.func.apply(null, args)\n    return @loaded[name]\n\n  clone: () ->\n    require = new Require()\n    require.defines = Object.clone(@defines)\n    require.loaded = Object.clone(@loaded)\n    return require\n\nrequire = new @Require()\n\n@require = () ->\n  require.run.apply(require, arguments)\n\n@require._ = require\n\n@define = () ->\n  require.define.apply(require, arguments)\n\n@$define = () ->\n  require.$define.apply(require, arguments)\n\n\n\n\n\n\n\n\n\n\n","define \"mocker\", [\n  \"require\"\n], (\n  require\n) ->\n\n  class Mocker\n\n    constructor: () ->\n      @require = require.clone()\n      @unload()\n\n    unload: () ->\n      for name of @require.loaded\n        @require.unload(name)\n\n    mock: () ->\n      @require.$define.apply(@require, arguments)\n\n    run: () ->\n      @require.run.apply(@require, arguments)\n      @unload()\n\n\n","#(=) require require\n#(=) require mocker\n"],"sourceRoot":"/"}